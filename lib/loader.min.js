/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */,
/* 1 */
/*!***********************!*\
  !*** ./src/loader.js ***!
  \***********************/
/*! no static exports found */
/*! all exports used */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* eslint no-console: */
/* eslint no-unused-expressions: */
/* eslint no-underscore-dangle: */
(function (root, doc) {
  var _class, _temp, _initialiseProps;

  var _Object$prototype = Object.prototype,
      toString = _Object$prototype.toString,
      hasOwnProperty = _Object$prototype.hasOwnProperty;
  /**
   * [读取localstorage的值]
   * @param  {string} key [localstorage的key]
   * @return {*}     [返回localstorage的value]
   */

  function getLocalStorageItem(key) {
    var cacheData = root.localStorage.getItem(key);
    if (cacheData) {
      cacheData = JSON.parse(cacheData);
      return cacheData.data;
    }
    return null;
  }

  /**
   * [设置localstorage的值]
   * @param {string} key          [localstorage的key]
   * @param {*} data         [localstorage的value]
   */
  function setLocalStorageItem(key, data) {
    var updateTime = new Date().getTime();
    var value = { updateTime: updateTime, data: data };
    root.localStorage.setItem(key, JSON.stringify(value));
  }

  function isArray(o) {
    return toString.call(o) === '[object Array]';
  }

  function isObject(o) {
    return toString.call(o) === '[object Object]';
  }
  var Loader = (_temp = _class = function () {
    function Loader(opts) {
      _classCallCheck(this, Loader);

      _initialiseProps.call(this);

      this.loaderPath = opts.cacheSuffix + '__LOADER_PATH__';
      this.loaderStatus = !!root[opts.cacheSuffix + '__STATUS__'];
      this.options = {
        mapPath: '',
        versionApi: null,
        staticHost: null,
        // mapKeys: null,
        accuracy: 1, // 版本校验的精度，0:10秒级别，1:分钟级别，2:小时级别，3:天级别，4:周级别
        retryTimes: 2,
        async: false,
        canReload: true // 允许加载相同的sdk
      };
      _extends(this.options, opts);
    }

    _createClass(Loader, [{
      key: 'getFilePaths',
      value: function getFilePaths() {
        return getLocalStorageItem(this.loaderPath);
      }
    }, {
      key: 'saveFilePaths',
      value: function saveFilePaths(val) {
        setLocalStorageItem(this.loaderPath, val);
      }
    }, {
      key: 'removeFilePaths',
      value: function removeFilePaths() {
        localStorage.removeItem(this.loaderPath);
      }

      /**
       * 动态插入js文件
       *
       * @param urls Array
       * @param callback
       */

    }, {
      key: 'updateLoaderStatus',
      value: function updateLoaderStatus() {
        var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

        root[this.options.cacheSuffix + '__STATUS__'] = status;
        this.loaderStatus = status;
      }
    }]);

    return Loader;
  }(), _initialiseProps = function _initialiseProps() {
    var _this = this;

    this.ajax = function (opts) {
      var options = opts || {};
      options.dataType = options.dataType || 'json';
      var params = _this.formatParams(options.data);
      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          var status = xhr.status;

          if (status >= 200 && status < 300 && options.success) {
            options.success(xhr.responseText, xhr.responseXML);
          } else if (options.fail) {
            options.fail(status);
          }
        }
      };
      var urlTag = options.url.indexOf('?') !== -1 ? '&' : '?';
      xhr.open('GET', '' + options.url + urlTag + params, true);
      xhr.send(null);
    };

    this.formatParams = function (data) {
      var arr = [];
      for (var name in data) {
        if (hasOwnProperty.call(data, name)) {
          arr.push(encodeURIComponent(name) + '=' + encodeURIComponent(data[name]));
        }
      }
      var ver = _this.dateStep();
      arr.push('vsr=' + ver);
      return arr.join('&');
    };

    this.dateStep = function () {
      var step = void 0;
      switch (_this.options.accuracy) {
        case 1:
          // 分钟
          step = 60;
          break;
        case 2:
          // 小时
          step = 60 * 60;
          break;
        case 3:
          // 天
          step = 60 * 60 * 24;
          break;
        case 4:
          // 周
          step = 60 * 60 * 24 * 7;
          break;
        default:
          step = 10;
          break;
      }
      var res = parseFloat('0.' + Math.floor(new Date().getTime() / 1000 / step) * 9999);
      var newtime = (res + 0.2).toString(36).substr(2).split('').reverse().join('') + (res + 0.9).toString(36).substr(2).split('').reverse().join('');
      return newtime;
    };

    this.insertAfter = function (newElement, targetElement) {
      var parent = targetElement.parentNode;
      if (parent.lastChild === targetElement) {
        parent.appendChild(newElement);
      } else {
        parent.insertBefore(newElement, targetElement.nextSibling);
      }
    };

    this.loadScripts = function (urls, callback) {
      var that = _this;
      var options = that.options;

      var count = 0;
      var _loadScript = function _loadScript() {
        var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : urls[count];

        that.removeLoadedScript(url);
        var head = doc.head;

        var script = doc.createElement('script');
        var src = options.staticHost ? options.staticHost + url : url;
        script.id = url;
        script.async = false;
        script.type = 'text/javascript';
        script.charset = 'utf-8';
        script.src = src;
        that.insertAfter(script, head.lastChild);
        script.addEventListener('error', function (e) {
          that.removeFilePaths();
          if (options.retryTimes > 0) {
            that.updateLoaderStatus(false);
            that.run();
            options.retryTimes += -1;
          } else {
            throw new Error(e.target.src + ' no found!');
          }
        });
        script.addEventListener('load', function () {
          var _url = urls[count += 1];
          if (_url) {
            _loadScript(_url);
          } else {
            callback && callback();
          }
        }, false);
      };
      _loadScript();
    };

    this.removeLoadedScript = function (name) {
      var script = document.getElementById(name);
      if (script && script.remove) script.remove();
    };

    this.updateFilePath = function (callback) {
      var that = _this;
      var _that$options = that.options,
          mapPath = _that$options.mapPath,
          staticHost = _that$options.staticHost;

      that.ajax({
        url: staticHost ? staticHost + mapPath : mapPath,
        success: function success(res) {
          var data = JSON.parse(res);
          var urls = [];
          if (isArray(data)) {
            urls = [].concat(_toConsumableArray(data));
          } else if (isObject(data)) {
            for (var key in data) {
              if (hasOwnProperty.call(data, key)) {
                urls.push(data[key]);
              }
            }
          }
          if (urls.length) {
            that.saveFilePaths(urls);
            callback && callback(urls);
          } else {
            throw new Error('No javascript files needed to load?');
          }
        }
      });
    };

    this.run = function (callback) {
      var that = _this;
      var options = that.options;


      if (_this.loaderStatus && !options.canReload) {
        options.callback();
        return;
      }
      that.updateLoaderStatus();
      var oldUrls = that.getFilePaths();
      if (!options.async && oldUrls) {
        that.loadScripts(oldUrls, function () {
          that.updateFilePath(function () {
            options.callback();
          });
        });
      } else {
        that.updateFilePath(function (urls) {
          that.loadScripts(urls, function () {
            options.callback();
          });
        });
      }
    };
  }, _temp);


  root.sdkLoader = function () {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};

    if (!opts.mapPath) {
      throw new Error('Failed to setting "mapPath"...');
    }
    if (opts.cacheSuffix) {
      opts.cacheSuffix = root.location.hostname + '_' + opts.cacheSuffix;
    } else {
      opts.cacheSuffix = root.location.hostname + '_' + opts.mapPath.split('?').shift().split('/').pop();
    }
    opts.callback = callback;
    new Loader(opts).run();
  };
})(window, document);

/***/ })
/******/ ]);